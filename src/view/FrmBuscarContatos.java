/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controllers.ContatoController;
import controllers.OrdemServicoContatoController;
import exceptions.CampoEmBrancoException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import model.Contato;
import model.ContatoTableModel;
import view.os.UITarefas;

/**
 *
 * @author guilh
 */
public class FrmBuscarContatos extends javax.swing.JDialog {

    private ContatoController contatoController;
    private OrdemServicoContatoController ordemServicoContatoController;
    private int ordemservicoId;
    private ContatoTableModel modelo;
    private TableRowSorter<ContatoTableModel> sorter;
    private UITarefas frmTarefas;

    private FrmBuscarContatos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public FrmBuscarContatos(UITarefas frmTarefas, int ordemServicoId) {
        this(null, true);
        this.contatoController = new ContatoController();
        this.ordemServicoContatoController = new OrdemServicoContatoController();
        this.ordemservicoId = ordemServicoId;
        this.frmTarefas = frmTarefas;
        this.modelo = new ContatoTableModel();
        this.sorter = new TableRowSorter<>(modelo);
        this.tblContatos.setRowSorter(sorter);
        populaTabela();
    }
    
    public JTable getTblContatos() {
        return tblContatos;
    }

    public ContatoTableModel getModelo() {
        return modelo;
    }

    public void populaTabela() {
        try {
            ArrayList<Contato> contatos = contatoController.listar();

            for (Contato contato : contatos) {
                modelo.addRow(contato);
            }

            tblContatos.setModel(modelo);

            if (contatos.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nenhum registro encontrado");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        } catch (CampoEmBrancoException ex) {
            Logger.getLogger(FrmBuscarContatos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public Contato getContatoSelecionado() {
        if (tblContatos.getSelectedRow() > -1) {
            int linhaSelecionada = tblContatos.getRowSorter()
                    .convertRowIndexToModel(tblContatos.getSelectedRow());
            return modelo.getRowValue(linhaSelecionada);
        } else {
            return null;
        }
    }

    public void pesquisar() {
        String nome = txtNomeContato.getText().trim();
        List<RowFilter<Object, Object>> filters = new ArrayList<>();
        filters.add(RowFilter.regexFilter("(?i)" + nome, 0));
        sorter.setRowFilter(RowFilter.andFilter(filters));
    }

    private void adicionar() {
        try {
            Contato contatoSelecionado = getContatoSelecionado();
            if (contatoSelecionado != null) {

                ordemServicoContatoController.inserir(ordemservicoId, contatoSelecionado.getId());
                frmTarefas.getContatoTableModel().addRow(contatoSelecionado);
                JOptionPane.showMessageDialog(this, "Contato Adicionado!");
            } else {
                JOptionPane.showMessageDialog(this,
                        "Selecione um contato para adicionar.",
                        "Contato n√£o selecionado",
                        JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro de banco de dados", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblContatos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtNomeContato = new javax.swing.JTextField();
        btnAdicionarContato = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar Contatos");
        setModal(true);
        setResizable(false);

        tblContatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblContatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblContatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblContatos);

        jLabel1.setText("Nome");

        txtNomeContato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeContatoKeyReleased(evt);
            }
        });

        btnAdicionarContato.setText("Adicionar");
        btnAdicionarContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarContatoActionPerformed(evt);
            }
        });

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNomeContato, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionarContato)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarContato)
                    .addComponent(btnNovo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeContatoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeContatoKeyReleased
        pesquisar();
    }//GEN-LAST:event_txtNomeContatoKeyReleased

    private void btnAdicionarContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarContatoActionPerformed
        adicionar();
    }//GEN-LAST:event_btnAdicionarContatoActionPerformed

    private void tblContatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblContatosMouseClicked
        if (evt.getClickCount() == 2) {
            Contato contatoSelecionado = getContatoSelecionado();
            if (contatoSelecionado != null) {
                new FrmCadastroContato(this, contatoSelecionado).setVisible(true);
            }
        }
    }//GEN-LAST:event_tblContatosMouseClicked

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        new FrmCadastroContato(this, null).setVisible(true);
    }//GEN-LAST:event_btnNovoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarContato;
    private javax.swing.JButton btnNovo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblContatos;
    private javax.swing.JTextField txtNomeContato;
    // End of variables declaration//GEN-END:variables
}
