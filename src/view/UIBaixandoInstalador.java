/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.swing.JOptionPane;

/**
 *
 * @author guilherme.oliveira
 */
public class UIBaixandoInstalador extends javax.swing.JDialog {

    /**
     * Creates new form UIBaixandoInstalador
     */
    public UIBaixandoInstalador(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void baixarArquivo() {        
        new Thread() {
            @Override
            public void run() {
                File arquivoDeSaida = new File(System.getProperty("user.home") + "\\Downloads\\install_dc.exe");
                HttpURLConnection url = null;
                InputStream inStream = null;
                FileOutputStream fileOutputStream = null;

                try {

                    // conecta ao local host para realizar o download do arquivo
                    url = (HttpURLConnection) new URL("http://dse.com.br/dc/install_dc.exe").openConnection();
                    url.setDoInput(true); // configura a conexao para aceitar o recebimento de dados
                    url.connect(); // efetiva a conexao

                    inStream = url.getInputStream();
                    fileOutputStream = new FileOutputStream(arquivoDeSaida); // abre um fluxo para gravar os dados no disco

                    byte[] buffer = new byte[4096];
                    int bytesLidos = 0;

                    while ((bytesLidos = inStream.read(buffer, 0, buffer.length)) > 0) {
                        fileOutputStream.write(buffer, 0, bytesLidos);
                        fileOutputStream.flush();
                    }

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao baixar arquivo! " + e.getMessage(),
                            "Erro ao baixar arquivo", JOptionPane.ERROR_MESSAGE);
                } finally {
                    try {
                        if (url != null) {
                            url.disconnect();
                        }
                        if (inStream != null) {
                            inStream.close();
                        }
                        if (fileOutputStream != null) {
                            fileOutputStream.close();
                        }
                        
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao baixar arquivo! " + ex.getMessage(),
                                "Erro ao baixar arquivo", JOptionPane.ERROR_MESSAGE);
                    }
                    
                    System.exit(0);
                }
            }
        }.start();

    }//abrirNavegador

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpbBaixando = new javax.swing.JProgressBar();
        jlBaixando = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jpbBaixando.setIndeterminate(true);

        jlBaixando.setText("Baixando Instalador...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpbBaixando, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlBaixando)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlBaixando)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpbBaixando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(266, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIBaixandoInstalador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIBaixandoInstalador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIBaixandoInstalador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIBaixandoInstalador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UIBaixandoInstalador dialog = new UIBaixandoInstalador(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jlBaixando;
    private javax.swing.JProgressBar jpbBaixando;
    // End of variables declaration//GEN-END:variables
}
