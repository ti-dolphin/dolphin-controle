/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.os;

import dao.DAOFactory;
import dao.os.PessoaDAO;
import dao.os.PessoaResponsavelDAO;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.os.Pessoa;
import model.os.PessoaResponsavel;
import model.os.PessoaTableModel;
import view.UICadPessoa;

/**
 *
 * @author guilherme.oliveira
 */
public class UIPermissaoResponsavel extends javax.swing.JDialog {

    PessoaTableModel pessoaTableModel = new PessoaTableModel();
    private UICadPessoa uiCadPessoa;
    private Pessoa pessoa;
    private Pessoa responsavel;
    private PessoaDAO pdao;
    PessoaResponsavelDAO prdao;
    
    public UIPermissaoResponsavel() {
    }

    public UIPermissaoResponsavel(Pessoa pessoa, UICadPessoa uiCadPessoa) {
        initComponents();
        this.pessoa = pessoa;
        this.uiCadPessoa = uiCadPessoa;
        this.pdao = DAOFactory.getPESSOADAO();
        this.prdao = DAOFactory.getPESSOARESPONSAVELDAO();
        buscar();
    }

    private void buscar() {
        try {
            String query = " ";

            if (!jtfNome.getText().isEmpty()) {
                query = query + " and NOME like '%" + jtfNome.getText() + "%'";
            }

            ArrayList<Pessoa> pessoas = pdao.filtrar(query);

            for (Pessoa p : pessoas) {
                pessoaTableModel.addRow(p);
            }//fecha for

            jtResponsaveis.setModel(pessoaTableModel);

            if (pessoas.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nenhum registro encontrado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(),
                    "Erro ao buscar pessoas",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//buscar

    public Pessoa getPessoaSelecionada() {
        if (jtResponsaveis.getSelectedRow() == -1) {
            return null;
        }
        return pessoaTableModel.getPessoas().get(jtResponsaveis.getSelectedRow());
    }//getPessoaSelecionada

    private void adicionar() {
        try {
            
            PessoaResponsavel pessoaResponsavel = new PessoaResponsavel();
            responsavel = getPessoaSelecionada();
            
            if (responsavel != null) {

                pessoaResponsavel.setPessoa(pessoa);
                pessoaResponsavel.setResponsavel(responsavel);

                prdao.cadastrar(pessoaResponsavel);

                uiCadPessoa.atualizarTblResponsaveis();
                JOptionPane.showMessageDialog(this, "Responsável permitido!");

            } else {
                JOptionPane.showMessageDialog(
                        this,
                        "Selecione o responsável que deseja permitir alterar suas tarefas!",
                        "Aviso",
                        JOptionPane.WARNING_MESSAGE
                );
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    this, 
                    e.getMessage(),
                    "Erro ao permitir responsavel", 
                    JOptionPane.ERROR_MESSAGE
            );
        }

    }//adicionar

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtResponsaveis = new javax.swing.JTable();
        jbAdicionar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Permitir Responsável");
        setModal(true);
        setResizable(false);

        jtResponsaveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtResponsaveis);

        jbAdicionar.setText("Adicionar");
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        jtfNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNomeKeyPressed(evt);
            }
        });

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbAdicionar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAdicionar)
                    .addComponent(jbPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        adicionar();
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        pessoaTableModel.clear();
        buscar();
    }//GEN-LAST:event_jbPesquisarActionPerformed

    private void jtfNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            pessoaTableModel.clear();
            buscar();
        }
    }//GEN-LAST:event_jtfNomeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIPermissaoResponsavel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIPermissaoResponsavel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIPermissaoResponsavel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIPermissaoResponsavel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UIPermissaoResponsavel dialog = new UIPermissaoResponsavel();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JTable jtResponsaveis;
    private javax.swing.JTextField jtfNome;
    // End of variables declaration//GEN-END:variables
}
