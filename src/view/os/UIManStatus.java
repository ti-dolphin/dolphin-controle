/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.os;

import dao.Critica;
import dao.DAOFactory;
import dao.os.StatusDAO;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.os.Status;
import model.os.StatusTableModel;

/**
 *
 * @author guilherme.oliveira
 */
public class UIManStatus extends javax.swing.JDialog {

    UIControleOS uiControleOS;
    private StatusTableModel statusModel = new StatusTableModel();
    /**
     * Creates new form UIManStatuss
     */
    private UIManStatus(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
    }

    public UIManStatus(UIControleOS uiControleOS) {
        this(null, true);
        initComponents();
        this.uiControleOS = uiControleOS;
        buscar();
    }

    public StatusTableModel getStatusModel() {
        return statusModel;
    }

    public void buscar() {
        try {
            StatusDAO dao = DAOFactory.getSTATUSDAO();
            String query = "";

            if (!jtfCodStatus.getText().isEmpty()) {
                query = " where CODSTATUS = " + jtfCodStatus.getText();
            }
            
            if (!jtfNome.getText().isEmpty()) {
                query = " where NOME like '%" + jtfNome.getText() + "%'";
            }
            
            ArrayList<Status> lstStatus = dao.filtrar(query);

            for (Status status : lstStatus) {
                statusModel.addRow(status);
            }//fecha for
            
            jtStatus.setModel(statusModel);
                
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), 
                    "Erro ao cadastrar status", JOptionPane.ERROR_MESSAGE);
        }
    }//fecha filtrar

    /**
     * Método usado para excluir status da OS
     */
    public void excluir() {
        try {
            int linha = jtStatus.getSelectedRow();
            StatusDAO dao = DAOFactory.getSTATUSDAO();

            int codStatus = (int) jtStatus.getValueAt(linha, 0);

            dao.excluir(codStatus);

        } catch (SQLException se) {
            JOptionPane.showMessageDialog(this, se.getMessage(),
                    "Erro ao excluir status", JOptionPane.ERROR_MESSAGE);
        }//fecha catch
    }//fecha excluir

    public Status getStatusSelecionado() {
        if (jtStatus.getSelectedRow() == -1) {
            return null;
        }

        return statusModel.getStatus().get(jtStatus.getSelectedRow());
    }//fecha getStatus
    
    public void popularTblStatus() {
        statusModel.clear();
        buscar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlCodStatus = new javax.swing.JLabel();
        jtfCodStatus = new javax.swing.JTextField();
        jtfNome = new javax.swing.JTextField();
        jlNome = new javax.swing.JLabel();
        jbCadStatus = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbLimparFiltros = new javax.swing.JButton();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtStatus = new javax.swing.JTable();
        jbEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manutenção de status da OS/Tarefa");

        jlCodStatus.setText("Código");

        jtfCodStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodStatusKeyPressed(evt);
            }
        });

        jtfNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNomeKeyPressed(evt);
            }
        });

        jlNome.setText("Nome");

        jbCadStatus.setText("Novo");
        jbCadStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadStatusActionPerformed(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbLimparFiltros.setText("Limpar Filtros");

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        jtStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Título 3"
            }
        ));
        jtStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtStatusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtStatus);

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCodStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCodStatus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlNome)
                                .addGap(0, 313, Short.MAX_VALUE))
                            .addComponent(jtfNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbLimparFiltros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbCadStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExcluir)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodStatus)
                    .addComponent(jlNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar)
                    .addComponent(jbLimparFiltros)
                    .addComponent(jbCadStatus)
                    .addComponent(jbExcluir)
                    .addComponent(jbEditar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCodStatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodStatusKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            statusModel.clear();
            buscar();
        }
    }//GEN-LAST:event_jtfCodStatusKeyPressed

    private void jtfNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            statusModel.clear();
            buscar();
        }
    }//GEN-LAST:event_jtfNomeKeyPressed

    private void jbCadStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadStatusActionPerformed
        new UICadStatus(null, this).setVisible(true);
    }//GEN-LAST:event_jbCadStatusActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int linha = jtStatus.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Selecione o status que deseja excluir!");
        } else {
            Object[] options = {"Sim", "Não"};
            int i = JOptionPane.showOptionDialog(null,
                    "Tem certeza que deseja excluir?", "Excluir",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,
                    options, options[0]);
            if (i == JOptionPane.YES_OPTION) {
                try {
                    boolean podeExcluirOS = Critica.podeExcluir("ORDEMSERVICO", "CODSTATUS", getStatusSelecionado().getCodStatus(), "cadastro de OS/Tarefa");
                    if (podeExcluirOS) {
                        excluir();
                        statusModel.clear();
                        buscar();
                    }
                } catch (SQLException se) {
                    JOptionPane.showMessageDialog(this, se.getMessage(),
                            "Erro ao tentar criticar", JOptionPane.ERROR_MESSAGE);
                }//catch
            }//if
        }//else
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jtStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtStatusMouseClicked
        if (evt.getClickCount() == 2) { 
            new UICadStatus(getStatusSelecionado(), this).setVisible(true);
        }
    }//GEN-LAST:event_jtStatusMouseClicked

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        if (getStatusSelecionado() != null) {
            new UICadStatus(getStatusSelecionado(), this).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione o status para editar!", 
                    "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        popularTblStatus();
    }//GEN-LAST:event_jbPesquisarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCadStatus;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbLimparFiltros;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JLabel jlCodStatus;
    private javax.swing.JLabel jlNome;
    private javax.swing.JTable jtStatus;
    private javax.swing.JTextField jtfCodStatus;
    private javax.swing.JTextField jtfNome;
    // End of variables declaration//GEN-END:variables
}
