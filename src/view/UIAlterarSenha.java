/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.DAOFactory;
import dao.os.PessoaDAO;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import model.os.Pessoa;
import utilitarios.Criptografia;

/**
 *
 * @author guilherme.oliveira
 */
public class UIAlterarSenha extends javax.swing.JInternalFrame {

    private Menu menu;
    private Pessoa pessoa;

    /**
     * Creates new form UIAtualizarSenha
     *
     * @param menu
     */
    public UIAlterarSenha(Menu menu) {
        initComponents();
        this.menu = menu;
    }

    private void limparCampos() {
        jpfNovaSenha.setText("");
        jpfConfirmarSenha.setText("");
    }
    
    public boolean validarSenha() {
        String senha = String.valueOf(jpfNovaSenha.getPassword());
        String confirmaSenha = String.valueOf(jpfConfirmarSenha.getPassword());
        
        if (senha.isEmpty()) {
            limparCampos();
            JOptionPane.showMessageDialog(null,  "Nova senha em branco!", 
                    "Erro ao salvar nova senha!", 
                    JOptionPane.ERROR_MESSAGE);
            jpfNovaSenha.grabFocus();
            return false;
        }
        
        if (!senha.equals(confirmaSenha)) {
            limparCampos();
            JOptionPane.showMessageDialog(null,  "Senhas s√£o diferentes!", 
                    "Erro ao salvar nova senha!", 
                    JOptionPane.ERROR_MESSAGE);
            jpfNovaSenha.grabFocus();
            return false;
        }
        return true;
    }

    private void salvar() {
        if (validarSenha()) {

            pessoa = menu.getUiLogin().getPessoa();
            PessoaDAO dao = DAOFactory.getPESSOADAO();

            try {
                pessoa.setSenha(Criptografia
                        .criptografar(String
                                .valueOf(jpfNovaSenha.getPassword())));

                dao.alterar(pessoa);
                JOptionPane.showMessageDialog(this, "Senha alterada!");
                limparCampos();
                this.dispose();
            } catch (SQLException se) {
                JOptionPane.showMessageDialog(this, se.getMessage(),
                        "Erro ao salvar senha", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlNovaSenha = new javax.swing.JLabel();
        jpfNovaSenha = new javax.swing.JPasswordField();
        jlConfirmarSenha = new javax.swing.JLabel();
        jpfConfirmarSenha = new javax.swing.JPasswordField();
        jbCancelar = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Alterar Senha");
        setToolTipText("");

        jlNovaSenha.setText("Nova Senha");

        jlConfirmarSenha.setText("Confirmar Nova Senha");

        jpfConfirmarSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpfConfirmarSenhaKeyPressed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlNovaSenha)
                    .addComponent(jpfNovaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlConfirmarSenha)
                    .addComponent(jpfConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCancelar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlNovaSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpfNovaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlConfirmarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpfConfirmarSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jpfConfirmarSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpfConfirmarSenhaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            salvar();
        }
    }//GEN-LAST:event_jpfConfirmarSenhaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JLabel jlConfirmarSenha;
    private javax.swing.JLabel jlNovaSenha;
    private javax.swing.JPasswordField jpfConfirmarSenha;
    private javax.swing.JPasswordField jpfNovaSenha;
    // End of variables declaration//GEN-END:variables
}
